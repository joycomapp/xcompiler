#define EOF_Sym	0	/* EOF */
#define C_identifierSym	1	/* identifier */
#define C_numberSym	2	/* number */
#define C_hexnumberSym	3	/* hexnumber */
#define C_stringSym	4	/* string */
#define C_charSym	5	/* char */
#define C_librarySym	6	/* library */
#define C_regexD1Sym	7	/* regex1 */
#define C_trueSym	8	/* "true" */
#define C_falseSym	9	/* "false" */
#define C_thisSym	10	/* "this" */
#define C_LparenSym	11	/* "(" */
#define C_RparenSym	12	/* ")" */
#define C_nullSym	13	/* "null" */
#define C_LbrackSym	14	/* "[" */
#define C_RbrackSym	15	/* "]" */
#define C_CommaSym	16	/* "," */
#define C_LbraceSym	17	/* "{" */
#define C_RbraceSym	18	/* "}" */
#define C_ColonSym	19	/* ":" */
#define C_newSym	20	/* "new" */
#define C_PointSym	21	/* "." */
#define C_PlusPlusSym	22	/* "++" */
#define C_MinusMinusSym	23	/* "--" */
#define C_deleteSym	24	/* "delete" */
#define C_voidSym	25	/* "void" */
#define C_typeofSym	26	/* "typeof" */
#define C_PlusSym	27	/* "+" */
#define C_MinusSym	28	/* "-" */
#define C_TildeSym	29	/* "~" */
#define C_BangSym	30	/* "!" */
#define C_StarSym	31	/* "*" */
#define C_SlashSym	32	/* "/" */
#define C_PercentSym	33	/* "%" */
#define C_LessLessSym	34	/* "<<" */
#define C_GreaterGreaterSym	35	/* ">>" */
#define C_GreaterGreaterGreaterSym	36	/* ">>>" */
#define C_LessSym	37	/* "<" */
#define C_GreaterSym	38	/* ">" */
#define C_LessEqualSym	39	/* "<=" */
#define C_GreaterEqualSym	40	/* ">=" */
#define C_instanceofSym	41	/* "instanceof" */
#define C_inSym	42	/* "in" */
#define C_EqualEqualSym	43	/* "==" */
#define C_BangEqualSym	44	/* "!=" */
#define C_EqualEqualEqualSym	45	/* "===" */
#define C_BangEqualEqualSym	46	/* "!==" */
#define C_AndSym	47	/* "&" */
#define C_UparrowSym	48	/* "^" */
#define C_BarSym	49	/* "|" */
#define C_AndAndSym	50	/* "&&" */
#define C_BarBarSym	51	/* "||" */
#define C_QuerySym	52	/* "?" */
#define C_EqualSym	53	/* "=" */
#define C_StarEqualSym	54	/* "*=" */
#define C_SlashEqualSym	55	/* "/=" */
#define C_PercentEqualSym	56	/* "%=" */
#define C_PlusEqualSym	57	/* "+=" */
#define C_MinusEqualSym	58	/* "-=" */
#define C_LessLessEqualSym	59	/* "<<=" */
#define C_GreaterGreaterEqualSym	60	/* ">>=" */
#define C_GreaterGreaterGreaterEqualSym	61	/* ">>>=" */
#define C_AndEqualSym	62	/* "&=" */
#define C_UparrowEqualSym	63	/* "^=" */
#define C_BarEqualSym	64	/* "|=" */
#define C_varSym	65	/* "var" */
#define C_SemicolonSym	66	/* ";" */
#define C_ifSym	67	/* "if" */
#define C_elseSym	68	/* "else" */
#define C_doSym	69	/* "do" */
#define C_whileSym	70	/* "while" */
#define C_forSym	71	/* "for" */
#define C_continueSym	72	/* "continue" */
#define C_breakSym	73	/* "break" */
#define C_returnSym	74	/* "return" */
#define C_withSym	75	/* "with" */
#define C_switchSym	76	/* "switch" */
#define C_caseSym	77	/* "case" */
#define C_defaultSym	78	/* "default" */
#define C_throwSym	79	/* "throw" */
#define C_trySym	80	/* "try" */
#define C_catchSym	81	/* "catch" */
#define C_finallySym	82	/* "finally" */
#define C_functionSym	83	/* "function" */
#define C_importSym	84	/* "import" */
#define No_Sym	85	/* not */
#define C_PreProcessorSym	86	/* PreProcessor */
#define MAXT	No_Sym	/* Max Terminals */
