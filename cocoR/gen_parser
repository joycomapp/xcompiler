#!/bin/bash
set -e

START_DIR=`pwd`
BASEDIR=$(dirname "$0")
echo basedir=$BASEDIR
echo start_dir=$START_DIR

echo export CRFRAMES=$BASEDIR
export CRFRAMES=$BASEDIR


if [ "$BASEDIR" = "$START_DIR" ] || [ "$BASEDIR" = "." ]; then
    echo 
else
    cp $BASEDIR/../*.rb $START_DIR/
fi
    


atgfile=$1

cpp2ruby_dir=$BASEDIR/../../CPP2Ruby

# cocor execute
cocor=$BASEDIR/cocor

#cd cocoR

#test grammar
$cocor -X $atgfile

# generate parser in c
$cocor -A -F -X -S -G -C -L -D $atgfile

output_dir=$START_DIR/output
mkdir -p $output_dir

# cp or move generated parser to output for converting to ruby
#cp cs.c         $output_dir
#cp cs.h         $output_dir
#cp cp.c         $output_dir
#cp cp.h         $output_dir
#cp ce.h         $output_dir
#cp cc.h         $output_dir
mv cs.cpp        $output_dir
mv cs.hpp        $output_dir
mv cp.cpp        $output_dir
mv cp.hpp        $output_dir
mv ce.hpp        $output_dir
mv cc.hpp        $output_dir
#cp c.cpp        $output_dir
rm c.cpp
#cp abap.lst     $output_dir
cp $BASEDIR/CR_SCAN.hpp  $output_dir
cp $BASEDIR/CR_ABS.hpp   $output_dir
cp $BASEDIR/CR_PARSE.hpp $output_dir

# translate parser from c to ruby
dir=`pwd`
echo current dir $dir
cd $cpp2ruby_dir
ruby translate.rb $output_dir/*.cpp -d $dir/o



cd $dir
cd ..
#./gen_sym.rb $output_dir/cc.hpp

echo DONE !

